{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["endpoint","solarized","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","Object","assign","light","fg","bg","hl","emph","comment","dark","style","bar","height","width","display","alignItems","padding","barTitle","textTransform","panel","flexDirection","body","flexGrow","fontFamily","fontSize","Space","App","React","useState","belCode","setBelCode","output","replInput","requestOutstanding","replState","setCombinedState","replInputField","useRef","useEffect","current","focus","color","background","justifyContent","cursor","onClick","fetch","method","JSON","stringify","expr","state","then","resp","json","result","type","text","icon","faPlay","value","onChange","event","target","resize","border","outline","spellcheck","map","index","key","rows","ref","currentState","onKeyDown","keyCode","preventDefault","flex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.385782fb.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nconst endpoint = 'https://repl-api.bel-chime.com/stateful-long'\n\n// Solarized theme from: https://ethanschoonover.com/solarized/\n// Colors taken from: https://github.com/thomasf/solarized-css/blob/master/src/solarized-css/partials/solarized-colors.styl\nlet solarized = {\n  base03: \"#002b36\",\n  base02: \"#073642\",\n  base01: \"#586e75\",\n  base00: \"#657b83\",\n  base0: \"#839496\",\n  base1: \"#93a1a1\",\n  base2: \"#eee8d5\",\n  base3: \"#fdf6e3\",\n\n  yellow: \"#b58900\",\n  orange: \"#cb4b16\",\n  red: \"#dc322f\",\n  magenta: \"#d33682\",\n  violet: \"#6c71c4\",\n  blue: \"#268bd2\",\n  cyan: \"#2aa198\",\n  green: \"#859900\",\n}\n\nsolarized = Object.assign(solarized, {\n  light: {\n    fg: solarized.base00,\n    bg: solarized.base3,\n    hl: solarized.base2,\n    emph: solarized.base01,\n    comment: solarized.base1,\n  },\n\n  dark: {\n    fg: solarized.base0,\n    bg: solarized.base03,\n    hl: solarized.base02,\n    emph: solarized.base1,\n    comment: solarized.base01,\n  },\n})\n\nconst style = {\n  bar: {\n    height: \"50px\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"15px\",\n  },\n  barTitle: {\n    textTransform: \"uppercase\",\n  },\n  panel: {\n    display: \"flex\",\n    width: \"50%\",\n    flexDirection: \"column\",\n  },\n  body: {\n    flexGrow: \"1\",\n    fontFamily: 'Monaco, Menlo, \"Courier New\", monospace',\n    fontSize: \"14px\",\n    display: \"flex\",\n  },\n}\n\nfunction Space({width, height}) {\n  return <div style={{width, height}}/>\n}\n\nfunction App() {\n  const [belCode, setBelCode] = React.useState('(prn \"Hello World!\")')\n  const [{output, replInput, requestOutstanding, replState}, setCombinedState] = React.useState({\n    output: [],\n    replInput: \"\",\n    requestOutstanding: false,\n    replState: \"\",\n  })\n  const replInputField = React.useRef(null)\n  React.useEffect(() => {\n    if (!requestOutstanding) {\n      replInputField.current.focus()\n    }\n  }, [requestOutstanding])\n\n  return (\n    // Main container\n    <div style={{display: \"flex\", height: \"100vh\", width: \"100vw\"}}>\n      {/* Left panel */}\n      <div style={{color: solarized.light.fg, ...style.panel}}>\n        {/* Left top bar */}\n        <div style={{background: solarized.light.hl, justifyContent: \"space-between\", ...style.bar}}>\n          <span style={style.barTitle}>editor</span>\n          {/* Submit button */}\n          <div\n            style={{\n              textTransform: \"uppercase\",\n              display: \"flex\",\n              alignItems: \"center\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              setCombinedState(({output}) => ({\n                replInput: \"\",\n                requestOutstanding: true,\n                output,\n              }))\n              fetch(endpoint, {\n                method: 'POST',\n                body: JSON.stringify({\n                  expr: belCode,\n                  state: \"\",\n                }),\n              }).then(resp => resp.json()).then(({result, state}) => setCombinedState({\n                output: [{type: \"output\", text: result}],\n                replInput: \"\",\n                requestOutstanding: false,\n                replState: state,\n              }))\n            }}\n          >\n            run <Space width=\"7px\"/><FontAwesomeIcon style={{fontSize: \"small\"}} icon={faPlay} />\n          </div>\n        </div>\n\n        {/* Left body */}\n        <div style={style.body}>\n          {/* Text editor */}\n          <textarea\n            value={belCode}\n            onChange={(event) => setBelCode(event.target.value)}\n            style={{\n              resize: \"none\",\n              width: \"100%\",\n              height: \"100%\",\n              flexGrow: \"1\",\n              background: solarized.light.bg,\n              border: \"none\",\n              outline: \"none\",\n              fontSize: \"inherit\",\n              padding: \"15px\",\n              color: \"inherit\",\n            }}\n            spellcheck=\"false\"\n          >\n          </textarea>\n        </div>\n      </div>\n\n      {/* Right panel */}\n      <div style={{color: solarized.dark.fg, ...style.panel}}>\n        {/* Right top bar */}\n        <div style={{background: solarized.dark.hl, ...style.bar}}>\n        <span style={{textTransform: \"uppercase\"}}>repl</span>\n        </div>\n\n        {/* Right body */}\n        <div style={{background: solarized.dark.bg, ...style.body}}>\n          {/* Output window */}\n          <div style={{padding: \"15px\"}}>\n            {output.map(({type, text}, index) => {\n              switch (type) {\n                case \"input\":\n                  return <div key={index}>> {text}</div>\n                case \"output\":\n                  return <div key={index}>{text}</div>\n              }\n            })}\n            {/* Repl */}\n            <div style={{display: \"flex\"}}>\n              {requestOutstanding ? null : <>\n                >&nbsp; <textarea\n                    rows=\"1\"\n                    value={replInput}\n                    ref={replInputField}\n                    onChange={(event) => {\n                      // https://stackoverflow.com/a/44708693\n                      const value = event.target.value\n                      setCombinedState((currentState) => ({\n                        ...currentState,\n                        replInput: value,\n                      })\n                    )}}\n                    onKeyDown={(event) => {\n                      if (event.keyCode == 13) {\n                        event.preventDefault()\n                        setCombinedState(({output}) => ({\n                          output: [...output,  {type: \"input\", text: replInput}],\n                          replInput: \"\",\n                          requestOutstanding: true,\n                        }))\n                        fetch(endpoint, {\n                          method: 'POST',\n                          body: JSON.stringify({\n                            expr: replInput,\n                            state: replState,\n                          })\n                        })\n                        .then((resp) => resp.json())\n                        .then(({result, state}) => setCombinedState(({output}) => ({\n                          output: [...output, {type: \"output\", text: result}],\n                          requestOutstanding: false,\n                          replInput: \"\",\n                          replState: state,\n                        })))\n                      }\n                    }}\n                    style={{\n                      flex: \"1\",\n                      background: solarized.dark.bg,\n                      border: \"none\",\n                      outline: \"none\",\n                      resize: \"none\",\n                      fontSize: \"inherit\",\n                      padding: \"0\",\n                      color: \"inherit\",\n                    }}\n                    spellcheck=\"false\"\n                ></textarea>\n              </>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}