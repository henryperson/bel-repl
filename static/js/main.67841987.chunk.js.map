{"version":3,"sources":["Examples.ts","App.tsx","serviceWorker.js","index.js"],"names":["title","code","api","colors","base03","base02","base01","base00","base0","base1","base2","base3","yellow","orange","red","magenta","violet","blue","cyan","green","solarized","light","fg","bg","hl","emph","comment","dark","style","bar","height","width","display","alignItems","padding","barTitle","textTransform","panel","flex","flexDirection","body","flexGrow","fontFamily","fontSize","button","cursor","Space","dims","getP","URLSearchParams","document","location","search","get","shareID","cachedPrograms","App","React","useState","belCode","pristine","setBelCode","output","replInput","requestOutstanding","replState","setCombinedState","showExamplesDiv","setShowExamplesDiv","replInputField","useRef","useEffect","current","focus","ref","handler","examplesDropdown","listener","event","contains","target","addEventListener","removeEventListener","fetch","then","resp","text","window","_","p","undefined","history","pushState","val","windowSize","getSize","innerWidth","innerHeight","setWindowSize","handleResize","useWindowSize","locals","color","background","justifyContent","onClick","method","json","share_id","buttonWidth","position","top","border","borderRadius","examples","map","i","key","borderBottom","length","JSON","stringify","expr","state","result","type","icon","faPlay","value","onChange","resize","margin","outline","backgroundColor","spellCheck","index","marginTop","x","Error","assertNever","rows","currentState","onKeyDown","keyCode","preventDefault","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67841987.chunk.js","sourcesContent":["export default [\n    {\n      title: \"fibonacci\",\n      code:\n`(def fib (n)\n  (if (= n 0)\n      '(0)\n      (let l '(1 0)\n        (repeat (dec n)\n          (set l (cons (+ (car l) (cadr l)) l)))\n        (rev l))))\n\n(fib 10)`\n    },\n    {\n      title: \"quicksort\",\n      code:\n`(set l '(6 3 8 0 2 2 1 6 8 0))\n\n(def quicksort (l)\n  (let partition (fn (lo hi)\n                   (with (pivot (hi l)\n                          i lo)\n                     (for j lo hi\n                       (if (< (j l) pivot)\n                           (do\n                             (swap (j l) (i l))\n                             (zap inc i))))\n                      (swap (i l) (hi l))\n                      i))\n    ((afn (lo hi)\n       (when (< lo hi)\n        (let pivot (partition lo hi)\n            (self lo (dec pivot))\n            (self (inc pivot) hi))))\n     1 (len l)))\n  l)\n\n(quicksort l)\n(prn l)`\n    }\n]","import React from 'react';\nimport './App.css';\nimport examples from './Examples'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nconst api = 'https://repl-api.bel-chime.com'\n\n// Solarized theme from: https://ethanschoonover.com/solarized/\n// Colors taken from: https://github.com/thomasf/solarized-css/blob/master/src/solarized-css/partials/solarized-colors.styl\nconst colors = {\n  base03: \"#002b36\",\n  base02: \"#073642\",\n  base01: \"#586e75\",\n  base00: \"#657b83\",\n  base0: \"#839496\",\n  base1: \"#93a1a1\",\n  base2: \"#eee8d5\",\n  base3: \"#fdf6e3\",\n\n  yellow: \"#b58900\",\n  orange: \"#cb4b16\",\n  red: \"#dc322f\",\n  magenta: \"#d33682\",\n  violet: \"#6c71c4\",\n  blue: \"#268bd2\",\n  cyan: \"#2aa198\",\n  green: \"#859900\",\n}\n\nconst solarized = {\n  light: {\n    fg: colors.base00,\n    bg: colors.base3,\n    hl: colors.base2,\n    emph: colors.base01,\n    comment: colors.base1,\n  },\n\n  dark: {\n    fg: colors.base0,\n    bg: colors.base03,\n    hl: colors.base02,\n    emph: colors.base1,\n    comment: colors.base01,\n  },\n\n  ...colors,\n}\n\nconst style = {\n  bar: {\n    height: \"50px\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"15px\",\n  },\n  barTitle: {\n    textTransform: \"uppercase\",\n  },\n  panel: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n  },\n  body: {\n    flexGrow: 1,\n    fontFamily: 'Monaco, Menlo, \"Courier New\", monospace',\n    fontSize: \"14px\",\n    display: \"flex\",\n  },\n  button: {\n    textTransform: \"uppercase\",\n    cursor: \"pointer\",\n  }\n} as {[name: string]: React.CSSProperties}\n\nfunction Space(dims: {width?: string, height?: string}) {\n  return <div style={dims} />\n}\n\nfunction assertNever(x: never): never {\n  throw new Error(\"Unexpected object: \" + x);\n}\n\n// Adapted from https://usehooks.com/useWindowSize/\nfunction useWindowSize() {\n  function getSize() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    }\n  }\n\n  const [windowSize, setWindowSize] = React.useState(getSize)\n\n  React.useEffect(() => {\n    function handleResize() {\n      setWindowSize(getSize())\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize\n}\n\n// Copied from https://usehooks.com/useOnClickOutside/\nfunction useOnClickOutside(ref, handler) {\n  React.useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n\nfunction getP() {\n  return new URLSearchParams(document.location.search).get(\"p\")\n}\n\nconst shareID = getP()\n\nconst cachedPrograms = {} as {[key: string]: string}\n\nfunction App() {\n  const [[belCode, pristine], setBelCode] = React.useState(\n    shareID ? [\"\", true] : [\"(cons 'hello 'world)\", false])\n  const [{output, replInput, requestOutstanding, replState}, setCombinedState] = React.useState({\n    output: [] as {type: \"input\" | \"output\", text: string}[],\n    replInput: \"\",\n    requestOutstanding: false,\n    replState: \"\",\n  })\n  const [showExamplesDiv, setShowExamplesDiv] = React.useState(false)\n\n  const replInputField = React.useRef() as React.RefObject<HTMLTextAreaElement>\n  React.useEffect(() => {\n    if (!requestOutstanding) {\n      replInputField.current?.focus()\n    }\n  }, [replInputField, requestOutstanding])\n  const examplesDropdown = React.useRef() as React.RefObject<HTMLDivElement>\n  useOnClickOutside(examplesDropdown, () => {setShowExamplesDiv(false)})\n\n  React.useEffect(() => {\n    if (shareID) {\n      fetch(`https://storage.googleapis.com/download/storage/v1/b/chime-snippets/o/${shareID}?alt=media`)\n        .then(resp => resp.text())\n        .then(code => {\n          cachedPrograms[shareID] = code\n          setBelCode([code, true])\n        })\n    }\n    window.addEventListener(\"popstate\", _ => {\n      const p = getP()\n      if (p) {\n        const code = cachedPrograms[p]\n        if (code !== undefined) {\n          setBelCode([code, true])\n        }\n      }\n    })\n  }, [])\n  React.useEffect(() => {\n    if (!pristine) {\n      window.history.pushState(null, '', '/')\n    }\n  }, [pristine])\n  const windowSize = useWindowSize()\n\n  let locals = {} as any\n  const setLocal = (varName: string, val: any) => (locals[varName] = val) && null\n\n  return (\n    // Main container\n    <div\n      style={{\n        display: \"flex\",\n        height: \"100%\",\n        width: \"100%\",\n        flexDirection: windowSize.width > windowSize.height ? \"row\" : \"column\",\n      }}\n    >\n      {/* Left panel */}\n      <div style={{color: solarized.light.fg, ...style.panel}}>\n        {/* Left top bar */}\n        <div style={{background: solarized.light.hl, justifyContent: \"space-between\", ...style.bar}}>\n          <span style={style.barTitle}>editor</span>\n          {/* Buttons */}\n          <div style={{display: \"flex\"}}>\n            {setLocal(\"buttonWidth\", \"25px\")}\n            {/* Share */}\n            <div\n              style={{\n                textTransform: \"uppercase\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => {\n                fetch(`${api}/share`, {\n                  method: 'POST',\n                  body: belCode,\n                }).then(resp => resp.json()).then(({share_id}) => {\n                  cachedPrograms[share_id] = belCode\n                  window.history.pushState(null, '', `/?p=${share_id}`)\n                  setBelCode([belCode, true])\n                })\n              }}\n            >\n              share\n            </div>\n            <Space width={locals.buttonWidth}/>\n            {/* Examples */}\n            <div\n              style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}\n              ref={examplesDropdown}\n            >\n              <div\n                style={style.button}\n                onClick={() => {\n                  setShowExamplesDiv(!showExamplesDiv)\n                }}\n              >\n                examples\n              </div>\n              {showExamplesDiv &&\n              <div style={{\n                position: \"absolute\",\n                textTransform: \"none\",\n                top: style.bar.height,\n                background: \"white\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                border: `1px solid ${solarized.light.fg}`,\n                borderRadius: \"2px\",\n              }}>\n                {examples.map(({title, code}, i) => (\n                  <div\n                    key={i}\n                    style={{\n                      height: \"45px\",\n                      width: \"150px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      borderBottom: i !== examples.length-1 ? `1px solid ${solarized.light.fg}` : \"\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick= {() => {\n                      setBelCode([code, false])\n                    }}\n                  >\n                    {title}\n                  </div>\n                ))}\n              </div>\n              }\n            </div>\n            <Space width={locals.buttonWidth}/>\n            {/* Run */}\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                ...style.button,\n              }}\n              onClick={() => {\n                setCombinedState(({output}) => ({\n                  replInput: \"\",\n                  requestOutstanding: true,\n                  output,\n                  replState,\n                }))\n                fetch(`${api}/stateful-long`, {\n                  method: 'POST',\n                  body: JSON.stringify({\n                    expr: belCode,\n                    state: \"\",\n                  }),\n                }).then(resp => resp.json()).then(({result, state}) => setCombinedState({\n                  output: [{type: \"output\", text: result}],\n                  replInput: \"\",\n                  requestOutstanding: false,\n                  replState: state,\n                }))\n              }}\n            >\n              run <Space width=\"7px\"/><FontAwesomeIcon style={{fontSize: \"small\"}} icon={faPlay} />\n            </div>\n          </div>\n\n        </div>\n\n        {/* Left body */}\n        <div style={{background: solarized.light.bg, ...style.body}}>\n          {/* Text editor */}\n          <textarea\n            value={belCode}\n            onChange={(event) => {\n              setBelCode([event.target.value, false])\n            }}\n            style={{\n              resize: \"none\",\n              width: \"100%\",\n              margin: 0,\n              flexGrow: 1,\n              border: \"none\",\n              outline: \"none\",\n              fontSize: \"inherit\",\n              padding: \"15px\",\n              color: \"inherit\",\n              backgroundColor: \"inherit\",\n            }}\n            spellCheck=\"false\"\n          >\n          </textarea>\n        </div>\n      </div>\n\n      {/* Right panel */}\n      <div style={{color: solarized.dark.fg, ...style.panel}}>\n        {/* Right top bar */}\n        <div style={{background: solarized.dark.hl, ...style.bar}}>\n        <span style={{textTransform: \"uppercase\"}}>repl</span>\n        </div>\n\n        {/* Right body */}\n        <div style={{background: solarized.dark.bg, ...style.body}}>\n          {/* Output window */}\n          <div style={{padding: \"15px\", width: \"100%\"}}>\n            {output.map(({type, text}, index) => {\n              switch (type) {\n                case \"input\":\n                  return <div key={index}>> {text}</div>\n                case \"output\":\n                  return <pre style={{marginTop: 0}} key={index}>{text}</pre>\n                default:\n                  return assertNever(type)\n              }\n            })}\n            {/* Repl */}\n            <div style={{display: \"flex\", alignItems: \"center\"}}>\n              {requestOutstanding ? null : <>\n                >&nbsp; <textarea\n                    rows={1}\n                    value={replInput}\n                    ref={replInputField}\n                    onChange={(event) => {\n                      // https://stackoverflow.com/a/44708693\n                      const value = event.target.value\n                      setCombinedState((currentState) => ({\n                        ...currentState,\n                        replInput: value,\n                      })\n                    )}}\n                    onKeyDown={(event) => {\n                      if (event.keyCode === 13) {\n                        event.preventDefault()\n                        setCombinedState(({output}) => ({\n                          output: [...output,  {type: \"input\", text: replInput}],\n                          replInput: \"\",\n                          requestOutstanding: true,\n                          replState: \"\",\n                        }))\n                        fetch(`${api}/stateful`, {\n                          method: 'POST',\n                          body: JSON.stringify({\n                            expr: replInput,\n                            state: replState,\n                          })\n                        })\n                        .then((resp) => resp.json())\n                        .then(({result, state}) => setCombinedState(({output}) => ({\n                          output: [...output, {type: \"output\", text: result}],\n                          requestOutstanding: false,\n                          replInput: \"\",\n                          replState: state,\n                        })))\n                      }\n                    }}\n                    style={{\n                      flex: \"1\",\n                      background: solarized.dark.bg,\n                      border: \"none\",\n                      outline: \"none\",\n                      resize: \"none\",\n                      fontSize: \"inherit\",\n                      padding: \"0\",\n                      color: \"inherit\",\n                      margin: 0,\n                    }}\n                    spellCheck=\"false\"\n                ></textarea>\n              </>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}